import React, { useState } from 'react';
import {
  Button,
  createStyles,
  Dialog,
  DialogActions,
  DialogContent,
  DialogTitle,
  TextField,
  Theme,
  withStyles,
} from '@material-ui/core';
import { useAppDispatch, useAppSelector } from 'redux/hooks';
import { createTeam } from 'redux/actions/userActions';

interface CreateTeam {
  teamName: string;
  teamTag: string;
  teamImage: string;
}

const styles = createStyles((theme: Theme) => ({
  main: {
    width: '100%',
    display: 'flex',
    flexDirection: 'column',
    alignItems: 'center',

    [theme.breakpoints.down('sm')]: {
      width: '100%',
      height: '100%',
      display: 'flex',
      flexDirection: 'column',
      alignItems: 'center',
      justifyContent: 'center',
      '& button': {
        marginTop: 10,
        width: '50%',
      },
      '& p': {
        color: 'gray',
        fontSize: 15,
      },
    },
  },
  textField: {
    [theme.breakpoints.down('sm')]: {
      width: '100%',
      height: '100%',
    },
  },
}));

const Team: React.FC<any> = (props) => {
  const { classes } = props;

  const dispatch = useAppDispatch();
  const [joinOpen, setJoinOpen] = useState<boolean>(false);
  const [createOpen, setCreateOpen] = useState<boolean>(false);
  const [data, setData] = useState<CreateTeam>({
    teamName: '',
    teamTag: '',
    teamImage: 'https://www.hiveworkshop.com/data/ratory-images/196/196595-a08598e68f70b8fbe8a340f040251bfb_tn.jpg',
  });
  const CreateTeam = (data: CreateTeam) => dispatch(createTeam(data));
  const Profile = useAppSelector((state) => state.user);

  const handleJoinOpen = () => {
    setJoinOpen(true);
  };

  const handleJoinClose = () => {
    setJoinOpen(false);
  };

  const handleCreateOpen = () => {
    setCreateOpen(true);
  };

  const handleCreateClose = () => {
    CreateTeam(data);
    setCreateOpen(false);
  };

  console.info(Profile);

  if (Profile.profile.inTeam) {
    return (
      <>
        <div></div>
      </>
    );
  }

  return (
    <>
      <div className={classes.main}>
        <p>Currently not in team.</p>
        <Button color="secondary" variant="contained" onClick={handleJoinOpen}>
          Join Team
        </Button>
        <Button color="secondary" variant="contained" onClick={handleCreateOpen}>
          Create Team
        </Button>

        <Dialog open={createOpen} onClose={handleCreateClose} fullWidth>
          <DialogTitle>New Team</DialogTitle>
          <DialogContent>
            <TextField
              placeholder="Name"
              value={data.teamName}
              onChange={(e) =>
                setData({
                  ...data,
                  teamName: e.target.value,
                })
              }
              fullWidth
              color="secondary"
              margin="normal"
              InputLabelProps={{
                shrink: true,
              }}
            />
            <TextField
              placeholder="Team Tag"
              fullWidth
              color="secondary"
              margin="normal"
              onChange={(e) =>
                setData({
                  ...data,
                  teamTag: e.target.value,
                })
              }
              InputLabelProps={{
                shrink: true,
              }}
              inputProps={{
                maxLength: 3,
              }}
            />
          </DialogContent>
          <DialogActions>
            <Button onClick={handleCreateClose} color="secondary">
              Disagree
            </Button>
            <Button onClick={handleCreateClose} color="secondary" autoFocus>
              Agree
            </Button>
          </DialogActions>
        </Dialog>

        <Dialog open={joinOpen} onClose={handleJoinClose} fullWidth>
          <DialogTitle>Join Team</DialogTitle>
          <DialogContent>
            <TextField
              label="Unique Team ID"
              placeholder="ID generated by team leader"
              fullWidth
              color="secondary"
              margin="normal"
              InputLabelProps={{
                shrink: true,
              }}
            />
          </DialogContent>
          <DialogActions>
            <Button onClick={handleJoinClose} color="secondary">
              Close
            </Button>
            <Button onClick={handleJoinClose} color="secondary" autoFocus>
              Join
            </Button>
          </DialogActions>
        </Dialog>
      </div>
    </>
  );
};

export default withStyles(styles)(Team);
